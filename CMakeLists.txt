cmake_minimum_required(VERSION 3.11.0)
set(CMAKE_CXX_STANDARD 23)
project(carg-example VERSION 0.0.1)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ./build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ./bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ./bin)
include_directories(${CMAKE_SOURCE_DIR}/include)

IF(Example STREQUAL "threadsafe")
    add_executable(carg-example example/example_ts.c)
ELSE()
    add_executable(carg-example example/example.c)
ENDIF()

IF (Link STREQUAL "static")
    add_library(carg STATIC src/carg_impl.c)
ELSE()
    add_library(carg SHARED src/carg_impl.c)
ENDIF()

target_link_libraries(carg-example PRIVATE carg)

IF (MSVC)
    target_compile_definitions(carg-example PRIVATE _CRT_SECURE_NO_WARNINGS)
    set(CMAKE_EXE_LINKER_FLAGS "/IGNORE:4099 /IGNORE:4098 /IGNORE:4996")
ENDIF()

IF (Sanitize STREQUAL "address")
    IF (MSVC)
        target_compile_options(carg-example PRIVATE /fsanitize=address)
    ELSE()
        target_compile_options(carg-example PRIVATE -g -fsanitize=address -fno-omit-frame-pointer -O0)
        target_link_options(carg-example PRIVATE -fsanitize=address)
    ENDIF()
ENDIF()